# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.readthedocs.io/en/stable/userguide/declarative_config.html

[metadata]
name = djqs
description = Add a short description here!
author = Beto Dealmeida
author_email = roberto@dealmeida.net
license = MIT
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/pyscaffold/pyscaffold/
# Add here related links, for example:
project_urls =
    Documentation = https://pyscaffold.org/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =.

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    SQLAlchemy-Utils>=0.37.7
    accept-types==0.4.1
    cachelib>=0.4.0
    duckdb==0.7.1
    fastapi==0.70.1
    msgpack>=1.0.3
    python-dotenv==0.19.2
    requests>=2.26.0
    rich>=10.16.2
    sqlalchemy>=1.3,<1.4.36
    sqlmodel==0.0.8
    sqlparse>=0.3.0
    pyspark==3.3.2

[options.packages.find]
where = .
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install djqs[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    alembic>=1.7.7
    codespell>=2.1.0
    freezegun>=1.1.0
    pre-commit>=2.15.0
    pyfakefs>=4.5.1
    pylint>=2.15.3
    pytest-asyncio==0.15.1
    pytest-cov>=2.12.1
    pytest-integration==0.2.2
    pytest-mock>=3.6.1
    pytest>=6.2.5
    requests-mock>=1.9.3
    setuptools>=49.6.0
    pip-tools>=6.4.0
    pydruid>=0.6.4
    typing-extensions>=4.3.0
docs =
    sphinx>=4.1.2

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = djqs.module:function
# For example:
# console_scripts =
#     fibonacci = djqs.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension
console_scripts =
    djqs = djqs.console:run
sqlalchemy.dialects =
    djqs = djqs.sql.sqlalchemy.dialect:DJDialect
superset.db_engine_specs =
    djqs = djqs.superset:DJEngineSpec

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov djqs --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.1
package = djqs
extensions =
    pre_commit
