{
    "openapi": "3.0.2",
    "info": {
        "title": "DJ server",
        "description": "A DataJunction metrics layer",
        "license": {
            "name": "MIT License",
            "url": "https://mit-license.org/"
        },
        "version": "0.0.post1.dev1+gd5a7903"
    },
    "paths": {
        "/catalogs/": {
            "get": {
                "summary": "List Catalogs",
                "description": "List all available catalogs",
                "operationId": "list_catalogs_catalogs__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response List Catalogs Catalogs  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CatalogInfo"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add Catalog",
                "description": "Add a Catalog",
                "operationId": "add_catalog_catalogs__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CatalogInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CatalogInfo"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/catalogs/{name}/": {
            "get": {
                "summary": "Read Catalog",
                "description": "Return a catalog by name",
                "operationId": "read_catalog_catalogs__name___get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CatalogInfo"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/catalogs/{name}/engines/": {
            "post": {
                "summary": "Add Engines To Catalog",
                "description": "Attach one or more engines to a catalog",
                "operationId": "add_engines_to_catalog_catalogs__name__engines__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Data",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EngineInfo"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CatalogInfo"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engines/": {
            "get": {
                "summary": "List Engines",
                "description": "List all available engines",
                "operationId": "list_engines_engines__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response List Engines Engines  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EngineInfo"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add Engine",
                "description": "Add an Engine",
                "operationId": "add_engine_engines__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EngineInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EngineInfo"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/engines/{name}/{version}/": {
            "get": {
                "summary": "List Engine",
                "description": "Return an engine by name and version",
                "operationId": "list_engine_engines__name___version___get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Version",
                            "type": "string"
                        },
                        "name": "version",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EngineInfo"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/": {
            "get": {
                "summary": "Read Metrics",
                "description": "List all available metrics.",
                "operationId": "read_metrics_metrics__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Read Metrics Metrics  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Metric"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/{name}/": {
            "get": {
                "summary": "Read Metric",
                "description": "Return a metric by name.",
                "operationId": "read_metric_metrics__name___get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metric"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/common/dimensions/": {
            "get": {
                "summary": "Common Dimensions",
                "description": "Return common dimensions for a set of metrics.",
                "operationId": "common_dimensions_metrics_common_dimensions__get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "List of metrics to find common dimensions for",
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        },
                        "name": "metric",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Common Dimensions Metrics Common Dimensions  Get",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/query/{sql}": {
            "get": {
                "summary": "Read Metrics Sql",
                "description": "Return SQL for a DJ Query.\n\nA database can be optionally specified. If no database is specified the optimal one\nwill be used.",
                "operationId": "read_metrics_sql_query__sql__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Sql",
                            "type": "string"
                        },
                        "name": "sql",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TranslatedSQL"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/validate/": {
            "post": {
                "summary": "Validate Node",
                "description": "Validate a node.",
                "operationId": "validate_node_nodes_validate__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Data",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/NodeRevisionBase"
                                    },
                                    {
                                        "$ref": "#/components/schemas/NodeRevision"
                                    }
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeValidation"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/{node_name}/attributes/": {
            "post": {
                "summary": "Set Column Attributes",
                "description": "Set column attributes for the node.",
                "operationId": "set_column_attributes_nodes__node_name__attributes__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Node Name",
                            "type": "string"
                        },
                        "name": "node_name",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Attributes",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ColumnAttributeInput"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Set Column Attributes Nodes  Node Name  Attributes  Post",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColumnOutput"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/": {
            "get": {
                "summary": "Read Nodes",
                "description": "List the available nodes.",
                "operationId": "read_nodes_nodes__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Read Nodes Nodes  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeOutput"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/{name}/": {
            "get": {
                "summary": "Read Node",
                "description": "Show the active version of the specified node.",
                "operationId": "read_node_nodes__name___get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeOutput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Node",
                "description": "Update a node.",
                "operationId": "update_node_nodes__name___patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateNode"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeOutput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/{name}/materialization/": {
            "post": {
                "summary": "Upsert Node Materialization Config",
                "description": "Update materialization config of the specified node.",
                "operationId": "upsert_node_materialization_config_nodes__name__materialization__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertMaterializationConfig"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/{name}/revisions/": {
            "get": {
                "summary": "List Node Revisions",
                "description": "List all revisions for the node.",
                "operationId": "list_node_revisions_nodes__name__revisions__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response List Node Revisions Nodes  Name  Revisions  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeRevisionOutput"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/source/": {
            "post": {
                "summary": "Create Source Node",
                "description": "Create a source node. If columns are not provided, the source node's schema\nwill be inferred using the configured query service.",
                "operationId": "create_source_node_nodes_source__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSourceNode"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeOutput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/metric/": {
            "post": {
                "summary": "Create Node",
                "description": "Create a node.",
                "operationId": "create_node_nodes_metric__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateNode"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeOutput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/dimension/": {
            "post": {
                "summary": "Create Node",
                "description": "Create a node.",
                "operationId": "create_node_nodes_dimension__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateNode"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeOutput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/transform/": {
            "post": {
                "summary": "Create Node",
                "description": "Create a node.",
                "operationId": "create_node_nodes_transform__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateNode"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeOutput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/cube/": {
            "post": {
                "summary": "Create Cube Node",
                "description": "Create a node.",
                "operationId": "create_cube_node_nodes_cube__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCubeNode"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NodeOutput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/{name}/columns/{column}/": {
            "post": {
                "summary": "Add Dimension To Node",
                "description": "Add information to a node column",
                "operationId": "add_dimension_to_node_nodes__name__columns__column___post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Column",
                            "type": "string"
                        },
                        "name": "column",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Dimension",
                            "type": "string"
                        },
                        "name": "dimension",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Dimension Column",
                            "type": "string"
                        },
                        "name": "dimension_column",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/{name}/tag/": {
            "post": {
                "summary": "Add Tag To Node",
                "description": "Add a tag to a node",
                "operationId": "add_tag_to_node_nodes__name__tag__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Tag Name",
                            "type": "string"
                        },
                        "name": "tag_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/similarity/{node1_name}/{node2_name}": {
            "get": {
                "summary": "Node Similarity",
                "description": "Compare two nodes by how similar their queries are",
                "operationId": "node_similarity_nodes_similarity__node1_name___node2_name__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Node1 Name",
                            "type": "string"
                        },
                        "name": "node1_name",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Node2 Name",
                            "type": "string"
                        },
                        "name": "node2_name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/nodes/{name}/downstream/": {
            "get": {
                "summary": "Downstream Nodes",
                "description": "List all nodes that are downstream from the given node, filterable by type.",
                "operationId": "downstream_nodes_nodes__name__downstream__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/NodeType"
                        },
                        "name": "node_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Downstream Nodes Nodes  Name  Downstream  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeOutput"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/{node_name}/availability/": {
            "post": {
                "summary": "Add Availability",
                "description": "Add an availability state to a node",
                "operationId": "add_availability_data__node_name__availability__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Node Name",
                            "type": "string"
                        },
                        "name": "node_name",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityStateBase"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/{node_name}/": {
            "get": {
                "summary": "Data For Node",
                "description": "Gets data for a node",
                "operationId": "data_for_node_data__node_name___get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Node Name",
                            "type": "string"
                        },
                        "name": "node_name",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Dimensions",
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        },
                        "name": "dimensions",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Filters",
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        },
                        "name": "filters",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Async ",
                            "type": "boolean",
                            "default": false
                        },
                        "name": "async_",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health/": {
            "get": {
                "summary": "Health",
                "description": "Healthcheck for services.",
                "operationId": "health_health__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Health Health  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HealthCheck"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cubes/{name}/": {
            "get": {
                "summary": "Read Cube",
                "description": "Get information on a cube",
                "operationId": "read_cube_cubes__name___get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CubeRevisionMetadata"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags/": {
            "get": {
                "summary": "List Tags",
                "description": "List all available tags.",
                "operationId": "list_tags_tags__get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Tag Type",
                            "type": "string"
                        },
                        "name": "tag_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response List Tags Tags  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TagOutput"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Tag",
                "description": "Create a tag.",
                "operationId": "create_tag_tags__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTag"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags/{name}/": {
            "get": {
                "summary": "Read Tag",
                "description": "Return a tag by name.",
                "operationId": "read_tag_tags__name___get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Tag",
                "description": "Update a tag.",
                "operationId": "update_tag_tags__name___patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTag"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags/{name}/nodes/": {
            "get": {
                "summary": "Find Nodes By Tag",
                "description": "Find nodes tagged with the tag, filterable by node type.",
                "operationId": "find_nodes_by_tag_tags__name__nodes__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Name",
                            "type": "string"
                        },
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/NodeType"
                        },
                        "name": "node_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Find Nodes By Tag Tags  Name  Nodes  Get",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attributes/": {
            "get": {
                "summary": "List Attributes",
                "description": "List all available attribute types.",
                "operationId": "list_attributes_attributes__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response List Attributes Attributes  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AttributeType"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add Attribute Type",
                "description": "Add a new attribute type",
                "operationId": "add_attribute_type_attributes__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MutableAttributeTypeFields"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttributeType"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sql/{node_name}/": {
            "get": {
                "summary": "Get Sql For Node",
                "description": "Return SQL for a node.",
                "operationId": "get_sql_for_node_sql__node_name___get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Node Name",
                            "type": "string"
                        },
                        "name": "node_name",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Dimensions",
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        },
                        "name": "dimensions",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Filters",
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        },
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TranslatedSQL"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AttributeOutput": {
                "title": "AttributeOutput",
                "required": [
                    "attribute_type"
                ],
                "type": "object",
                "properties": {
                    "attribute_type": {
                        "$ref": "#/components/schemas/AttributeTypeName"
                    }
                },
                "description": "Column attribute output."
            },
            "AttributeType": {
                "title": "AttributeType",
                "required": [
                    "namespace",
                    "name",
                    "description",
                    "allowed_node_types"
                ],
                "type": "object",
                "properties": {
                    "uniqueness_scope": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UniquenessScope"
                        },
                        "default": []
                    },
                    "namespace": {
                        "title": "Namespace",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "allowed_node_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeType"
                        }
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    }
                },
                "description": "Available attribute types for column metadata."
            },
            "AttributeTypeName": {
                "title": "AttributeTypeName",
                "required": [
                    "namespace",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "namespace": {
                        "title": "Namespace",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Attribute type name."
            },
            "AvailabilityState": {
                "title": "AvailabilityState",
                "required": [
                    "catalog",
                    "table",
                    "valid_through_ts",
                    "max_partition",
                    "min_partition"
                ],
                "type": "object",
                "properties": {
                    "catalog": {
                        "title": "Catalog",
                        "type": "string"
                    },
                    "schema_": {
                        "title": "Schema ",
                        "type": "string"
                    },
                    "table": {
                        "title": "Table",
                        "type": "string"
                    },
                    "valid_through_ts": {
                        "title": "Valid Through Ts",
                        "type": "integer"
                    },
                    "max_partition": {
                        "title": "Max Partition",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "min_partition": {
                        "title": "Min Partition",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "The availability of materialized data for a node"
            },
            "AvailabilityStateBase": {
                "title": "AvailabilityStateBase",
                "required": [
                    "catalog",
                    "table",
                    "valid_through_ts",
                    "max_partition",
                    "min_partition"
                ],
                "type": "object",
                "properties": {
                    "catalog": {
                        "title": "Catalog",
                        "type": "string"
                    },
                    "schema_": {
                        "title": "Schema ",
                        "type": "string"
                    },
                    "table": {
                        "title": "Table",
                        "type": "string"
                    },
                    "valid_through_ts": {
                        "title": "Valid Through Ts",
                        "type": "integer"
                    },
                    "max_partition": {
                        "title": "Max Partition",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "min_partition": {
                        "title": "Min Partition",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "An availability state base"
            },
            "Catalog": {
                "title": "Catalog",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "uuid": {
                        "title": "Uuid",
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "extra_params": {
                        "title": "Extra Params",
                        "type": "object",
                        "default": {}
                    }
                },
                "description": "A catalog."
            },
            "CatalogInfo": {
                "title": "CatalogInfo",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "engines": {
                        "title": "Engines",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EngineInfo"
                        },
                        "default": []
                    }
                },
                "description": "Class for catalog creation"
            },
            "Column": {
                "title": "Column",
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ColumnType"
                    },
                    "dimension_id": {
                        "title": "Dimension Id",
                        "type": "integer"
                    },
                    "dimension_column": {
                        "title": "Dimension Column",
                        "type": "string"
                    }
                },
                "description": "A column.\n\nColumns can be physical (associated with ``Table`` objects) or abstract (associated\nwith ``Node`` objects)."
            },
            "ColumnAttributeInput": {
                "title": "ColumnAttributeInput",
                "required": [
                    "attribute_type_name",
                    "column_name"
                ],
                "type": "object",
                "properties": {
                    "attribute_type_namespace": {
                        "title": "Attribute Type Namespace",
                        "type": "string",
                        "default": "system"
                    },
                    "attribute_type_name": {
                        "title": "Attribute Type Name",
                        "type": "string"
                    },
                    "column_name": {
                        "title": "Column Name",
                        "type": "string"
                    }
                },
                "description": "A column attribute input"
            },
            "ColumnMetadata": {
                "title": "ColumnMetadata",
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "description": "A simple model for column metadata."
            },
            "ColumnOutput": {
                "title": "ColumnOutput",
                "required": [
                    "name",
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ColumnType"
                    },
                    "attributes": {
                        "title": "Attributes",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeOutput"
                        }
                    },
                    "dimension": {
                        "$ref": "#/components/schemas/NodeNameOutput"
                    }
                },
                "description": "A simplified column schema, without ID or dimensions."
            },
            "ColumnType": {
                "title": "ColumnType",
                "type": "object",
                "properties": {},
                "description": "Base type for all Column Types"
            },
            "CreateCubeNode": {
                "title": "CreateCubeNode",
                "required": [
                    "cube_elements",
                    "description",
                    "mode",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "cube_elements": {
                        "title": "Cube Elements",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/NodeMode"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "description": "A create object for cube nodes"
            },
            "CreateNode": {
                "title": "CreateNode",
                "required": [
                    "query",
                    "description",
                    "mode",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "query": {
                        "title": "Query",
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/NodeMode"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Create non-source node object."
            },
            "CreateSourceNode": {
                "title": "CreateSourceNode",
                "required": [
                    "catalog",
                    "schema_",
                    "table",
                    "description",
                    "mode",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "catalog": {
                        "title": "Catalog",
                        "type": "string"
                    },
                    "schema_": {
                        "title": "Schema ",
                        "type": "string"
                    },
                    "table": {
                        "title": "Table",
                        "type": "string"
                    },
                    "columns": {
                        "title": "Columns",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SourceNodeColumnType"
                        }
                    },
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/NodeMode"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "A create object for source nodes"
            },
            "CreateTag": {
                "title": "CreateTag",
                "required": [
                    "description",
                    "name",
                    "tag_type"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "tag_metadata": {
                        "title": "Tag Metadata",
                        "type": "object",
                        "default": {}
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "tag_type": {
                        "title": "Tag Type",
                        "type": "string"
                    }
                },
                "description": "Create tag model."
            },
            "CubeElementMetadata": {
                "title": "CubeElementMetadata",
                "required": [
                    "id",
                    "current_version",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "current_version": {
                        "title": "Current Version",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Metadata for an element in a cube"
            },
            "CubeRevisionMetadata": {
                "title": "CubeRevisionMetadata",
                "required": [
                    "node_revision_id",
                    "node_id",
                    "type",
                    "name",
                    "display_name",
                    "version",
                    "cube_elements",
                    "updated_at"
                ],
                "type": "object",
                "properties": {
                    "node_revision_id": {
                        "title": "Node Revision Id",
                        "type": "integer"
                    },
                    "node_id": {
                        "title": "Node Id",
                        "type": "integer"
                    },
                    "type": {
                        "$ref": "#/components/schemas/NodeType"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "default": ""
                    },
                    "availability": {
                        "$ref": "#/components/schemas/AvailabilityState"
                    },
                    "cube_elements": {
                        "title": "Cube Elements",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CubeElementMetadata"
                        }
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "Metadata for a cube node"
            },
            "EngineInfo": {
                "title": "EngineInfo",
                "required": [
                    "name",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "string"
                    },
                    "uri": {
                        "title": "Uri",
                        "type": "string"
                    }
                },
                "description": "Class for engine creation"
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "HealthCheck": {
                "title": "HealthCheck",
                "required": [
                    "name",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/HealthcheckStatus"
                    }
                },
                "description": "A healthcheck response."
            },
            "HealthcheckStatus": {
                "title": "HealthcheckStatus",
                "enum": [
                    "ok",
                    "failed"
                ],
                "type": "string",
                "description": "Possible health statuses."
            },
            "MaterializationConfigOutput": {
                "title": "MaterializationConfigOutput",
                "required": [
                    "engine",
                    "config"
                ],
                "type": "object",
                "properties": {
                    "engine": {
                        "$ref": "#/components/schemas/EngineInfo"
                    },
                    "config": {
                        "title": "Config",
                        "type": "string"
                    }
                },
                "description": "Output for materialization config."
            },
            "Metric": {
                "title": "Metric",
                "required": [
                    "id",
                    "name",
                    "display_name",
                    "current_version",
                    "created_at",
                    "updated_at",
                    "query",
                    "dimensions"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "current_version": {
                        "title": "Current Version",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "default": ""
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "query": {
                        "title": "Query",
                        "type": "string"
                    },
                    "dimensions": {
                        "title": "Dimensions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "Class for a metric."
            },
            "MutableAttributeTypeFields": {
                "title": "MutableAttributeTypeFields",
                "required": [
                    "namespace",
                    "name",
                    "description",
                    "allowed_node_types"
                ],
                "type": "object",
                "properties": {
                    "namespace": {
                        "title": "Namespace",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "allowed_node_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeType"
                        }
                    }
                },
                "description": "Fields on attribute types that users can set."
            },
            "NodeMode": {
                "title": "NodeMode",
                "enum": [
                    "published",
                    "draft"
                ],
                "type": "string",
                "description": "Node mode.\n\nA node can be in one of the following modes:\n\n1. PUBLISHED - Must be valid and not cause any child nodes to be invalid\n2. DRAFT - Can be invalid, have invalid parents, and include dangling references"
            },
            "NodeNameOutput": {
                "title": "NodeNameOutput",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Node name only"
            },
            "NodeOutput": {
                "title": "NodeOutput",
                "required": [
                    "current",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "current": {
                        "title": "Current",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NodeRevisionOutput"
                            }
                        ],
                        "flatten": true
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        },
                        "default": []
                    }
                },
                "description": "Output for a node that shows the current revision."
            },
            "NodeRevision": {
                "title": "NodeRevision",
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/NodeType"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "default": ""
                    },
                    "query": {
                        "title": "Query",
                        "type": "string"
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NodeMode"
                            }
                        ],
                        "default": "published"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "string",
                        "default": "v0.1"
                    },
                    "node_id": {
                        "title": "Node Id",
                        "type": "integer"
                    },
                    "catalog_id": {
                        "title": "Catalog Id",
                        "type": "integer"
                    },
                    "schema_": {
                        "title": "Schema ",
                        "type": "string"
                    },
                    "table": {
                        "title": "Table",
                        "type": "string"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NodeStatus"
                            }
                        ],
                        "default": "invalid"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "A node revision."
            },
            "NodeRevisionBase": {
                "title": "NodeRevisionBase",
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/NodeType"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "default": ""
                    },
                    "query": {
                        "title": "Query",
                        "type": "string"
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NodeMode"
                            }
                        ],
                        "default": "published"
                    }
                },
                "description": "A base node revision."
            },
            "NodeRevisionOutput": {
                "title": "NodeRevisionOutput",
                "required": [
                    "node_revision_id",
                    "node_id",
                    "type",
                    "name",
                    "display_name",
                    "version",
                    "status",
                    "mode",
                    "columns",
                    "updated_at",
                    "materialization_configs",
                    "parents"
                ],
                "type": "object",
                "properties": {
                    "node_revision_id": {
                        "title": "Node Revision Id",
                        "type": "integer"
                    },
                    "node_id": {
                        "title": "Node Id",
                        "type": "integer"
                    },
                    "type": {
                        "$ref": "#/components/schemas/NodeType"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/NodeStatus"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/NodeMode"
                    },
                    "catalog": {
                        "$ref": "#/components/schemas/Catalog"
                    },
                    "schema_": {
                        "title": "Schema ",
                        "type": "string"
                    },
                    "table": {
                        "title": "Table",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "default": ""
                    },
                    "query": {
                        "title": "Query",
                        "type": "string"
                    },
                    "availability": {
                        "$ref": "#/components/schemas/AvailabilityState"
                    },
                    "columns": {
                        "title": "Columns",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ColumnOutput"
                        }
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "string",
                        "format": "date-time"
                    },
                    "materialization_configs": {
                        "title": "Materialization Configs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MaterializationConfigOutput"
                        }
                    },
                    "parents": {
                        "title": "Parents",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeNameOutput"
                        }
                    }
                },
                "description": "Output for a node revision with information about columns and if it is a metric."
            },
            "NodeStatus": {
                "title": "NodeStatus",
                "enum": [
                    "valid",
                    "invalid"
                ],
                "type": "string",
                "description": "Node status.\n\nA node can have one of the following statuses:\n\n1. VALID - All references to other nodes and node columns are valid\n2. INVALID - One or more parent nodes are incompatible or do not exist"
            },
            "NodeType": {
                "title": "NodeType",
                "enum": [
                    "source",
                    "transform",
                    "metric",
                    "dimension",
                    "cube"
                ],
                "type": "string",
                "description": "Node type.\n\nA node can have 4 types, currently:\n\n1. SOURCE nodes are root nodes in the DAG, and point to tables or views in a DB.\n2. TRANSFORM nodes are SQL transformations, reading from SOURCE/TRANSFORM nodes.\n3. METRIC nodes are leaves in the DAG, and have a single aggregation query.\n4. DIMENSION nodes are special SOURCE nodes that can be auto-joined with METRICS.\n5. CUBE nodes contain a reference to a set of METRICS and a set of DIMENSIONS."
            },
            "NodeValidation": {
                "title": "NodeValidation",
                "required": [
                    "message",
                    "status",
                    "node_revision",
                    "dependencies",
                    "columns"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/NodeStatus"
                    },
                    "node_revision": {
                        "$ref": "#/components/schemas/NodeRevision"
                    },
                    "dependencies": {
                        "title": "Dependencies",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeRevisionOutput"
                        }
                    },
                    "columns": {
                        "title": "Columns",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Column"
                        }
                    }
                },
                "description": "A validation of a provided node definition"
            },
            "SourceNodeColumnType": {
                "title": "SourceNodeColumnType",
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ColumnType"
                    },
                    "dimension": {
                        "title": "Dimension",
                        "type": "string"
                    }
                },
                "description": "Schema of a column for a table defined in a source node"
            },
            "Tag": {
                "title": "Tag",
                "required": [
                    "description",
                    "name",
                    "tag_type"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "tag_metadata": {
                        "title": "Tag Metadata",
                        "type": "object",
                        "default": {}
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "tag_type": {
                        "title": "Tag Type",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    }
                },
                "description": "A tag."
            },
            "TagOutput": {
                "title": "TagOutput",
                "required": [
                    "description",
                    "name",
                    "tag_type"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "tag_metadata": {
                        "title": "Tag Metadata",
                        "type": "object",
                        "default": {}
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "tag_type": {
                        "title": "Tag Type",
                        "type": "string"
                    }
                },
                "description": "Output tag model."
            },
            "TranslatedSQL": {
                "title": "TranslatedSQL",
                "required": [
                    "sql"
                ],
                "type": "object",
                "properties": {
                    "sql": {
                        "title": "Sql",
                        "type": "string"
                    },
                    "columns": {
                        "title": "Columns",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ColumnMetadata"
                        }
                    }
                },
                "description": "Class for SQL generated from a given metric."
            },
            "UniquenessScope": {
                "title": "UniquenessScope",
                "enum": [
                    "node",
                    "column_type"
                ],
                "type": "string",
                "description": "The scope at which this attribute needs to be unique."
            },
            "UpdateNode": {
                "title": "UpdateNode",
                "type": "object",
                "properties": {
                    "catalog": {
                        "title": "Catalog",
                        "type": "string"
                    },
                    "schema_": {
                        "title": "Schema ",
                        "type": "string"
                    },
                    "table": {
                        "title": "Table",
                        "type": "string"
                    },
                    "columns": {
                        "title": "Columns",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SourceNodeColumnType"
                        }
                    },
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/NodeMode"
                    },
                    "query": {
                        "title": "Query",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "description": "Update node object where all fields are optional"
            },
            "UpdateTag": {
                "title": "UpdateTag",
                "type": "object",
                "properties": {
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "tag_metadata": {
                        "title": "Tag Metadata",
                        "type": "object"
                    }
                },
                "additionalProperties": false,
                "description": "Update tag model. Only works on mutable fields."
            },
            "UpsertMaterializationConfig": {
                "title": "UpsertMaterializationConfig",
                "required": [
                    "engine_name",
                    "engine_version",
                    "config"
                ],
                "type": "object",
                "properties": {
                    "engine_name": {
                        "title": "Engine Name",
                        "type": "string"
                    },
                    "engine_version": {
                        "title": "Engine Version",
                        "type": "string"
                    },
                    "config": {
                        "title": "Config",
                        "type": "string"
                    }
                },
                "description": "An upsert object for materialization configs"
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            }
        }
    }
}