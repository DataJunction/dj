version: "3"

networks:
  core:
    driver: bridge
  djqs-network:
    driver: bridge
  djrs-network:
    driver: bridge

services:
  dj:
    container_name: dj
    stdin_open: true
    tty: true
    networks:
      - core
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - OTEL_RESOURCE_ATTRIBUTES=service.name=datajunction.server
      - DOTENV_FILE=${DOTENV_FILE:-/code/.env}
      - OAUTHLIB_INSECURE_TRANSPORT=1
    build:
      context: ./datajunction-server
      args:
        RELOAD: "--reload"
    volumes:
      - ./datajunction-server:/code
    ports:
      - "8000:8000"
    depends_on:
      - db_migration
      - postgres_metadata
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgres_metadata:
    container_name: postgres_metadata
    image: postgres:latest
    networks:
      - core
    hostname: postgres_metadata
    volumes:
      - ./postgres_metadata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=dj
      - POSTGRES_USER=dj
      - POSTGRES_DB=dj
      - PGUSER=dj
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db_migration:
    container_name: db_migration
    networks:
      - core
    build:
      context: ./datajunction-server
    volumes:
      - ./datajunction-server:/code
    command: /bin/bash -c "alembic upgrade head"
    restart: on-failure
    depends_on:
      postgres_metadata:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  djui:
    container_name: djui
    image: node:19
    working_dir: /usr/src/app
    ports:
      - "3000:3000"
    stdin_open: true
    volumes:
      - ./datajunction-ui:/usr/src/app/
      - ./datajunction-ui/node_modules:/usr/src/app/node_modules
    command: sh -c "yarn && yarn webpack-build && yarn webpack-start --host 0.0.0.0 --port 3000"

  djqs:
    container_name: djqs
    profiles: ["demo"]
    stdin_open: true
    tty: true
    networks:
      - core
      - djqs-network
    build:
      context: ./datajunction-query
    volumes:
      - ./datajunction-query:/code
    ports:
      - "8001:8001"

  djqs-db-migration:
    container_name: djqs-db-migration
    profiles: ["demo"]
    networks:
      - djqs-network
    build:
      context: ./datajunction-query
    volumes:
      - ./datajunction-query:/code
    command: /bin/bash -c "cp -n /code/djqs.demo.db /code/djqs.db | true && sleep 2 && alembic upgrade head"
    restart: on-failure
    depends_on:
      - djqs

  djrs-redis:
    container_name: djrs-redis
    profiles: ["demo"]
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - djrs-network

  djrs-worker:
    container_name: djrs-worker
    profiles: ["demo"]
    build:
      context: ./datajunction-reflection
    command: ["celery", "-A", "datajunction_reflection.worker.app", "worker", "--loglevel", "INFO"]
    networks:
      - core
      - djrs-network
    volumes:
      - ./datajunction-reflection:/code
    depends_on:
      - djrs-redis
      - dj

  djrs-beat:
    container_name: djrs-beat
    profiles: ["demo"]
    build:
      context: ./datajunction-reflection
    command:
      ["celery", "--app", "datajunction_reflection.worker.app", "beat", "--loglevel", "INFO"]
    networks:
      - djrs-network
    depends_on:
      - djrs-redis
      - dj
    restart: "no"
    volumes:
      - ./datajunction-reflection:/code

  jupyter-notebook:
    image: jupyter/scipy-notebook
    container_name: jupyter
    profiles: ["demo"]
    networks:
      - core
    ports:
      - "8181:8888"
    volumes:
      - ./notebooks:/home/jovyan/notebooks
      - ./datajunction-clients/python:/home/jovyan/notebooks/datajunction
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    command: /bin/bash -c "pip install -e /home/jovyan/notebooks/datajunction/ && start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"

  jaeger:
    container_name: jaeger
    profiles: ["demo"]
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    networks:
      - core
