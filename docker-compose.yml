version: "2.2"

volumes:
  postgres_data: {}
  redis_data: {}

networks:
  djqs-network:
    driver: bridge
  dj_core:
    external: true

services:
  djqs:
    container_name: djqs
    stdin_open: true
    tty: true
    networks:
      - dj_core
      - djqs-network
    environment:
      - DOTENV_FILE=.docker-env/.env
    build: .
    volumes:
      - .:/code
    ports:
      - "8001:8001"
    depends_on:
      - db-migration-djqs
      - postgres-examples-djqs
      - redis-djqs

  celery-djqs:
    container_name: celery-djqs
    networks:
      - djqs-network
    environment:
      - DOTENV_FILE=.docker-env/.env
    build: .
    volumes:
      - .:/code
    depends_on:
      - djqs
    command: celery -A djqs.api.queries.celery worker --loglevel=info

  watchdog-djqs:
    container_name: watchdog-djqs
    networks:
      - djqs-network
    environment:
      - DOTENV_FILE=.docker-env/.env
    build: .
    volumes:
      - .:/code
    depends_on:
      - djqs
    command: djqs compile --reload
    restart: on-failure

  db-migration-djqs:
    container_name: db-migration
    networks:
      - djqs-network
    environment:
      - DOTENV_FILE=.docker-env/.env
    build: .
    volumes:
      - .:/code
    command: alembic upgrade head
    restart: on-failure

  redis-djqs:
    image: redis:latest
    container_name: query_broker
    networks:
      - djqs-network
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres-examples-djqs:
    container_name: postgres-examples-djqs
    networks:
      - djqs-network
    image: postgres:latest
    volumes:
      - ./examples/docker/postgres_init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
      # dbt
      - ./examples/dbt/postgres_init.sql:/docker-entrypoint-initdb.d/init_dbt.sql
      - ./examples/dbt:/docker-entrypoint-dbt
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=username
      - POSTGRES_DB=examples
    ports:
      - "5434:5432"
