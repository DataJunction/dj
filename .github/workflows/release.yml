name: Release
on:
  workflow_dispatch:
    inputs:
      library:
        type: choice
        description: Which library to bump
        required: true
        options:
          - server
          - client
      bump:
        type: choice
        description: Hatch version bump rule
        required: true
        options:
          - release
          - major
          - minor
          - patch
          - alpha
          - beta
          - rc
          - post
          - dev

jobs:
  publish:
    env:
      PDM_DEPS: 'urllib3<2'
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
    runs-on: 'ubuntu-latest'
    defaults:
      run:
        working-directory: ${{ github.event.inputs.library == 'server' && '.' || './client/python' }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          prerelease: true
          enable-pep582: true

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Bump release version with poetry and tag
        run: |
          hatch version ${{ github.event.inputs.bump }}
          export NEW_VERSION=v$(hatch version)
          export LIBRARY=${{ github.event.inputs.library }}
          git commit -am "Bumping $LIBRARY to version $NEW_VERSION"
          git tag -a $NEW_VERSION-$LIBRARY -m $NEW_VERSION-$LIBRARY
          git push origin $NEW_VERSION-$LIBRARY
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_SCOPED_TOKEN }}

      - name: Publish to pypi
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        run: |
          hatch build
          hatch publish

      - name: Create Github release
        run: |
          export LIBRARY=${{ github.event.inputs.library }}
          gh release create $(hatch version)-$LIBRARY --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_SCOPED_TOKEN }}
